from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from filters.chat_types import ChatTypeFilter, IsAdmin


# –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
admin_router = Router()
admin_router.message.filter(ChatTypeFilter(["private"]), IsAdmin())


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_KB = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑")],
        [KeyboardButton(text="–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤"), KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑")],
    ],
    resize_keyboard=True,
    sizes=(2,),
)


# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫
class OrderState(StatesGroup):
    client_name = State()
    bot_purpose = State()
    budget = State()
    contact_info = State()


# –ö–æ–º–∞–Ω–¥–∞ /admin –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@admin_router.message(Command("admin"))
async def admin_panel(message: types.Message):
    print("–í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ")
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", reply_markup=ADMIN_KB)


# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
@admin_router.message(F.text == "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑")
async def create_order(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:", reply_markup=ReplyKeyboardRemove())
    await state.set_state(OrderState.client_name)


@admin_router.message(OrderState.client_name, F.text)
async def set_client_name(message: types.Message, state: FSMContext):
    await state.update_data(client_name=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂):")
    await state.set_state(OrderState.bot_purpose)


@admin_router.message(OrderState.bot_purpose, F.text)
async def set_bot_purpose(message: types.Message, state: FSMContext):
    await state.update_data(bot_purpose=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—ã–π –±—é–¥–∂–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞:")
    await state.set_state(OrderState.budget)


@admin_router.message(OrderState.budget, F.text)
async def set_budget(message: types.Message, state: FSMContext):
    await state.update_data(budget=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, Telegram):")
    await state.set_state(OrderState.contact_info)


@admin_router.message(OrderState.contact_info, F.text)
async def set_contact_info(message: types.Message, state: FSMContext):
    data = await state.get_data()
    await message.answer(
        f"‚úÖ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {data['client_name']}\n"
        f"üìå –¶–µ–ª—å –±–æ—Ç–∞: {data['bot_purpose']}\n"
        f"üí∞ –ë—é–¥–∂–µ—Ç: {data['budget']}\n"
        f"üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã: {data['contact_info']}",
        reply_markup=ADMIN_KB
    )
    await state.clear()


# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
@admin_router.message(F.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤")
async def view_orders(message: types.Message):
    await message.answer("üìã –ü–æ–∫–∞ —á—Ç–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç.")


@admin_router.message(F.text == "–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑")
async def delete_order(message: types.Message):
    await message.answer("üîç –£–∫–∞–∂–∏—Ç–µ ID –∑–∞–∫–∞–∑–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ).")

from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command, or_f
from aiogram.types import FSInputFile
from text_message import text
# –ò–º–ø–æ—Ä—Ç Bold –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å —à—Ä–∏—Ñ—Ç –∂–∏—Ä–Ω—ã–º
from aiogram.utils.formatting import Bold

from filters.chat_types import ChatTypeFilter

from kbds import reply, inline


# –ü–æ–º–µ—â–∞–µ–º —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª.
user_private_router = Router()
# –ù–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä. –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç private —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
# –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö. –ï—Å–ª–∏ gropup —Ç–æ –≤ –≥—Ä—É–ø–ø–∞—Ö –∏–ª–∏ –æ–±–∞ —Å—Ä–∞–∑—É.
user_private_router.message.filter(ChatTypeFilter(["private"]))


# dp.message - –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö –∫ –±–æ—Ç—É.
@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    # reply_markup - –æ–±—Ä–∞—â–∞—é—Å—å –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∏–∑ —Ñ–∞–π–ª–∞ reply.py, –ø–∞–ø–∫–∏ kbds.
    # –û—Ç–≤–µ—Ç–∏—Ç—å —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞ –∫–æ–¥: await message.reply(message.text)
    await message.answer(text.selling_text_4, reply_markup=reply.submenu_kd)


#                          –•—ç–Ω–¥–ª–µ—Ä—ã:
@user_private_router.message(or_f(Command("menu"), F.text.casefold() == "–º–µ–Ω—é"))
async def menu_cmd(message: types.Message):
    photo = FSInputFile("images/start_image_2.webp")
    await message.answer_photo(
        photo, "–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?üßê", reply_markup=reply.submenu_kd
    )


@user_private_router.message(F.text.casefold() == "–æ—Ç–∑—ã–≤—ã")
async def reviews(message: types.Message):

    texts = Bold("–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ üòä")  # –î–µ–ª–∞–µ–º —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º
    await message.answer(texts.as_html(), parse_mode="HTML", reply_markup=reply.submenu_kd)

    photo = FSInputFile("images/review1.webp")
    photo_2 = FSInputFile("images/review1.webp")
    await message.answer_photo(photo)
    await message.answer_photo(photo_2)


@user_private_router.message(
    or_f(Command("–ö–µ–π—Å—ã"), F.text.casefold() == "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã")
)
async def payment_cmd(message: types.Message):
    await message.answer("–ö–µ–π—Å—ã: –¢—É—Ç –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–µ–π—Å—ã", reply_markup=reply.submenu_kd)


@user_private_router.message(F.text.casefold() == "–∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –±–æ—Ç–∞")
async def about_cmd(message: types.Message):
    await message.answer(text.selling_text, reply_markup=inline.platform_kb)


@user_private_router.message(F.text.casefold() == "—Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥")
async def new_menu_cmd(message: types.Message):
    await message.answer(text.selling_text_3, reply_markup=reply.submenu_kd)


# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
# @user_private_router.message(lambda message: message.content_type == types.ContentType.TEXT)
# async def echo(message: types.Message):
#     text = message.text

#     if text:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ text –Ω–µ None
#         if text.lower() in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', 'hi', 'hello', '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä', '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ']:
#             await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!')
#         elif text.lower() in ['–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è', '–¥–æ—Å–≤–∏–¥–∞–Ω–∏—è', '–ø–æ–∫–∞', '–ø–∞–∫–µ–¥–∞', '–ø—Ä–æ—â–∞–π—Ç–µ']:
#             await message.answer('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è')
#         else:
#             await message.answer(text)
#     else:
#         await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.")
